{
	"basePath": "/api/v1",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"IPriceLevel": {
			"properties": {
				"price": {
					"type": "string"
				},
				"volume": {
					"type": "string"
				},
				"volumeRatio": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"price",
				"volume",
				"volumeRatio"
			],
			"type": "object"
		},
		"IOrderBookListing": {
			"properties": {
				"priceLevels": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IPriceLevel"
					}
				}
			},
			"required": [
				"priceLevels"
			],
			"type": "object"
		},
		"IAggregatedOrderData": {
			"properties": {
				"sells": {
					"$ref": "#/definitions/IOrderBookListing"
				},
				"buys": {
					"$ref": "#/definitions/IOrderBookListing"
				}
			},
			"required": [
				"sells",
				"buys"
			],
			"type": "object"
		},
		"IToken": {
			"properties": {
				"name": {
					"type": "string"
				},
				"address": {
					"type": "string"
				},
				"symbol": {
					"type": "string"
				},
				"decimals": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"name",
				"address",
				"symbol",
				"decimals"
			],
			"type": "object"
		},
		"ITokenPair": {
			"properties": {
				"assetDataA": {
					"$ref": "#/definitions/IToken"
				},
				"assetDataB": {
					"$ref": "#/definitions/IToken"
				},
				"minAmount": {
					"type": "string"
				},
				"maxAmount": {
					"type": "string"
				},
				"precision": {
					"type": "number",
					"format": "double"
				},
				"baseVolume": {
					"type": "string"
				},
				"quoteVolume": {
					"type": "string"
				}
			},
			"required": [
				"assetDataA",
				"assetDataB",
				"minAmount",
				"maxAmount",
				"precision",
				"baseVolume",
				"quoteVolume"
			],
			"type": "object"
		},
		"IGetAssetPairsResponse": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ITokenPair"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"INetwork": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double"
				},
				"label": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"label",
				"url"
			],
			"type": "object"
		},
		"IMaintenanceStatus": {
			"description": "To set maintenance status from redis-cli:\nset maintenance_status \"{ \\\"isMaintenance\\\": true, \\\"reason\\\": \\\"We are currently performing maintenance on our Ethereum nodes. Service will return as soon as possible.\\\" }\"\n\nor to turn off\n\nset maintenance_status \"{ \\\"isMaintenance\\\": false }\"\nCurrent status of app",
			"properties": {
				"isMaintenance": {
					"type": "boolean"
				},
				"reason": {
					"type": "string",
					"x-nullable": true
				}
			},
			"required": [
				"isMaintenance"
			],
			"type": "object"
		},
		"ISource": {
			"properties": {
				"domain": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"region": {
					"type": "string"
				},
				"path": {
					"type": "string"
				}
			},
			"required": [
				"domain",
				"title",
				"region",
				"path"
			],
			"type": "object"
		},
		"ICurrency": {
			"properties": {
				"code": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			},
			"required": [
				"code",
				"title",
				"slug",
				"url"
			],
			"type": "object"
		},
		"IVotes": {
			"properties": {
				"negative": {
					"type": "number",
					"format": "double"
				},
				"positive": {
					"type": "number",
					"format": "double"
				},
				"important": {
					"type": "number",
					"format": "double"
				},
				"liked": {
					"type": "number",
					"format": "double"
				},
				"disliked": {
					"type": "number",
					"format": "double"
				},
				"lol": {
					"type": "number",
					"format": "double"
				},
				"toxic": {
					"type": "number",
					"format": "double"
				},
				"saved": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"negative",
				"positive",
				"important",
				"liked",
				"disliked",
				"lol",
				"toxic",
				"saved"
			],
			"type": "object"
		},
		"IResult": {
			"properties": {
				"domain": {
					"type": "string"
				},
				"source": {
					"$ref": "#/definitions/ISource"
				},
				"title": {
					"type": "string"
				},
				"published_at": {
					"type": "string",
					"format": "date-time"
				},
				"slug": {
					"type": "string"
				},
				"currencies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ICurrency"
					}
				},
				"id": {
					"type": "number",
					"format": "double"
				},
				"created_at": {
					"type": "string",
					"format": "date-time"
				},
				"url": {
					"type": "string"
				},
				"votes": {
					"$ref": "#/definitions/IVotes"
				}
			},
			"required": [
				"domain",
				"source",
				"title",
				"published_at",
				"slug",
				"currencies",
				"id",
				"created_at",
				"url",
				"votes"
			],
			"type": "object"
		},
		"ICryptoPanicPostsResponse": {
			"properties": {
				"count": {
					"type": "number",
					"format": "double"
				},
				"next": {
					"type": "string"
				},
				"previous": {
					"type": "object",
					"x-nullable": true
				},
				"results": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IResult"
					}
				}
			},
			"required": [
				"count",
				"next",
				"results"
			],
			"type": "object"
		},
		"NewsItem": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"url": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"featured": {
					"type": "boolean"
				},
				"source": {
					"type": "string",
					"enum": [
						"medium",
						"twitter"
					]
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"url",
				"title",
				"description",
				"featured",
				"source"
			],
			"type": "object"
		},
		"IGetNewsItemsResponse": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NewsItem"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"Notification": {
			"description": "A notification meant for consumption by clients",
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"account": {
					"type": "string",
					"description": "Hex address of account associated with notification"
				},
				"label": {
					"type": "string",
					"description": "Text label of notification"
				},
				"expirationDate": {
					"type": "string",
					"format": "date-time",
					"description": "Date the notification expires"
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"account",
				"label",
				"expirationDate"
			],
			"type": "object"
		},
		"Account": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"name": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"state": {
					"type": "string"
				},
				"country": {
					"type": "string"
				},
				"address": {
					"type": "string"
				},
				"accountType": {
					"type": "string",
					"enum": [
						"relayer",
						"market-maker",
						"developer",
						"trader",
						"other"
					],
					"x-nullable": true
				},
				"phoneNumber": {
					"type": "string",
					"x-nullable": true
				},
				"referrerAccountId": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"referralWalletId": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				},
				"isConfirmed": {
					"type": "boolean"
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"name",
				"city",
				"state",
				"country",
				"address",
				"isConfirmed"
			],
			"type": "object"
		},
		"Order": {
			"description": "An order that has been recorded on the ERC dEX Order Book",
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"dateClosed": {
					"type": "string",
					"format": "date-time",
					"description": "Date on which the order was closed through fill, cancel, etc",
					"x-nullable": true
				},
				"exchangeAddress": {
					"type": "string",
					"description": "0x Exchange Contract Address"
				},
				"expirationTimeSeconds": {
					"type": "string",
					"description": "Unix timestamp of order expiration (in seconds)"
				},
				"feeRecipientAddress": {
					"type": "string",
					"description": "Address of the fee recipient"
				},
				"makerAddress": {
					"type": "string",
					"description": "Address of the order maker"
				},
				"makerFee": {
					"type": "string",
					"description": "Fee due from maker on order fill"
				},
				"makerAssetAddress": {
					"type": "string",
					"description": "Token address of the maker token"
				},
				"makerAssetData": {
					"type": "string",
					"description": "Encoded maker asset data"
				},
				"takerAssetData": {
					"type": "string",
					"description": "Encoded taker asset data"
				},
				"makerAssetAmount": {
					"type": "string",
					"description": "Total amount of maker token in order"
				},
				"salt": {
					"type": "string",
					"description": "Secure salt"
				},
				"signature": {
					"type": "string",
					"description": "Serialized version of the EC signature for signed orders"
				},
				"takerAddress": {
					"type": "string",
					"description": "Taker address; generally a null taker"
				},
				"takerFee": {
					"type": "string",
					"description": "Fee due from taker on order fill"
				},
				"takerAssetAddress": {
					"type": "string",
					"description": "Token address of the taker token"
				},
				"takerAssetAmount": {
					"type": "string",
					"description": "Total amount of taker token in order"
				},
				"remainingFillableTakerAmount": {
					"type": "string",
					"description": "Remaining amount that can be filled in taker tokens"
				},
				"remainingFillableMakerAmount": {
					"type": "string",
					"description": "Remaining amount that can be filled in maker tokens"
				},
				"orderHash": {
					"type": "string",
					"description": "The hash of the signed order"
				},
				"accountId": {
					"type": "number",
					"format": "double",
					"description": "Account ID of originator",
					"x-nullable": true
				},
				"state": {
					"type": "number",
					"format": "double",
					"description": "State of the order: Open (0), Canceled (1),\nFilled (2), Expired(3), Removed(4)"
				},
				"price": {
					"type": "string"
				},
				"senderAddress": {
					"type": "string"
				},
				"system": {
					"type": "boolean"
				},
				"account": {
					"$ref": "#/definitions/Account",
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"exchangeAddress",
				"expirationTimeSeconds",
				"feeRecipientAddress",
				"makerAddress",
				"makerFee",
				"makerAssetAddress",
				"makerAssetData",
				"takerAssetData",
				"makerAssetAmount",
				"salt",
				"signature",
				"takerAddress",
				"takerFee",
				"takerAssetAddress",
				"takerAssetAmount",
				"remainingFillableTakerAmount",
				"remainingFillableMakerAmount",
				"orderHash",
				"state",
				"price",
				"senderAddress",
				"system"
			],
			"type": "object"
		},
		"IOrderCreationRequest": {
			"properties": {
				"makerAddress": {
					"type": "string",
					"description": "Order maker"
				},
				"takerAddress": {
					"type": "string",
					"description": "Order taker; should generally be the null address (0x000...) in the case of ERC dEX"
				},
				"feeRecipientAddress": {
					"type": "string",
					"description": "Recipient of owed fees"
				},
				"senderAddress": {
					"type": "string",
					"description": "Required order sender"
				},
				"makerAssetAmount": {
					"type": "string",
					"description": "Amount of maker token in trade"
				},
				"takerAssetAmount": {
					"type": "string",
					"description": "Amount of taker token in trade"
				},
				"makerFee": {
					"type": "string",
					"description": "Fee owed by maker"
				},
				"takerFee": {
					"type": "string",
					"description": "Fee owed by taker"
				},
				"makerAssetData": {
					"type": "string",
					"description": "Address of maker token"
				},
				"takerAssetData": {
					"type": "string",
					"description": "Address of taker token"
				},
				"salt": {
					"type": "string",
					"description": "Secure salt"
				},
				"exchangeAddress": {
					"type": "string",
					"description": "Address of 0x exchange contract"
				},
				"expirationTimeSeconds": {
					"type": "string",
					"description": "Unix timestamp when order expires"
				},
				"signature": {
					"type": "string",
					"description": "Secure EC Signature"
				}
			},
			"required": [
				"makerAddress",
				"takerAddress",
				"feeRecipientAddress",
				"senderAddress",
				"makerAssetAmount",
				"takerAssetAmount",
				"makerFee",
				"takerFee",
				"makerAssetData",
				"takerAssetData",
				"salt",
				"exchangeAddress",
				"expirationTimeSeconds",
				"signature"
			],
			"type": "object"
		},
		"IOrderData": {
			"properties": {
				"order": {
					"$ref": "#/definitions/Order"
				}
			},
			"required": [
				"order"
			],
			"type": "object"
		},
		"IGetOrdersResponse": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IOrderData"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"IOrderConfig": {
			"properties": {
				"senderAddress": {
					"type": "string"
				},
				"feeRecipientAddress": {
					"type": "string"
				},
				"makerFee": {
					"type": "string"
				},
				"takerFee": {
					"type": "string"
				}
			},
			"required": [
				"senderAddress",
				"feeRecipientAddress",
				"makerFee",
				"takerFee"
			],
			"type": "object"
		},
		"IFeeRecipientsResponse": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"IOrderbookSide": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IOrderData"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"IOrderbookResponse": {
			"properties": {
				"bids": {
					"$ref": "#/definitions/IOrderbookSide"
				},
				"asks": {
					"$ref": "#/definitions/IOrderbookSide"
				}
			},
			"required": [
				"bids",
				"asks"
			],
			"type": "object"
		},
		"ICancelOrderResult": {
			"properties": {
				"orderHash": {
					"type": "string"
				},
				"success": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				}
			},
			"required": [
				"orderHash",
				"success",
				"message"
			],
			"type": "object"
		},
		"ICancelOrderData": {
			"properties": {
				"orderHash": {
					"type": "string",
					"description": "Computed unique order hash"
				},
				"signature": {
					"type": "string",
					"description": "Signed message indicating intent to cancel. Sign a hex of a message with format `cancel:ORDER_HASH_GOES_HERE`"
				}
			},
			"required": [
				"orderHash",
				"signature"
			],
			"type": "object"
		},
		"ICancelOrdersRequest": {
			"properties": {
				"cancellations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ICancelOrderData"
					}
				}
			},
			"required": [
				"cancellations"
			],
			"type": "object"
		},
		"ITokenTicker": {
			"properties": {
				"symbol": {
					"type": "string"
				},
				"usdPrice": {
					"type": "string"
				},
				"dailyPercentageChange": {
					"type": "string"
				},
				"dailyVolume": {
					"type": "string"
				},
				"priceEth": {
					"type": "string"
				}
			},
			"required": [
				"symbol",
				"usdPrice",
				"dailyPercentageChange",
				"dailyVolume",
				"priceEth"
			],
			"type": "object"
		},
		"IGlobalTickerRecord": {
			"properties": {
				"baseTokenSymbol": {
					"type": "string",
					"description": "Base token of trade, e.g. 'ZRX' in 'ZRX/WETH'"
				},
				"quoteTokenSymbol": {
					"type": "string",
					"description": "Quote token of trade, e.g. 'WETH' in 'ZRX/WETH'"
				},
				"baseVolume": {
					"type": "string",
					"description": "Volume in base token units"
				},
				"quoteVolume": {
					"type": "string",
					"description": "Volume in quote token units"
				},
				"ask": {
					"type": "string",
					"description": "Current best (lowest) ask price",
					"x-nullable": true
				},
				"bid": {
					"type": "string",
					"description": "Current best (highest) bid price",
					"x-nullable": true
				},
				"low": {
					"type": "string",
					"description": "Lowest price in time period",
					"x-nullable": true
				},
				"high": {
					"type": "string",
					"description": "Highest price in time period",
					"x-nullable": true
				},
				"open": {
					"type": "string",
					"description": "Most recent price at beginning of time period",
					"x-nullable": true
				},
				"last": {
					"type": "string",
					"description": "Most recent price",
					"x-nullable": true
				},
				"percentChange": {
					"type": "string",
					"description": "Percentage change of price in period"
				},
				"timestamp": {
					"type": "number",
					"format": "double",
					"description": "Unix timestamp of quote"
				}
			},
			"required": [
				"baseTokenSymbol",
				"quoteTokenSymbol",
				"baseVolume",
				"quoteVolume",
				"percentChange",
				"timestamp"
			],
			"type": "object"
		},
		"ITokenRequestRequest": {
			"properties": {
				"symbol": {
					"type": "string"
				},
				"email": {
					"type": "string",
					"x-nullable": true
				},
				"message": {
					"type": "string",
					"x-nullable": true
				}
			},
			"required": [
				"symbol"
			],
			"type": "object"
		},
		"FillReceiptLog": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"orderId": {
					"type": "number",
					"format": "double"
				},
				"receiptId": {
					"type": "number",
					"format": "double"
				},
				"takerAmount": {
					"type": "string"
				},
				"makerAddress": {
					"type": "string"
				},
				"isFeeOrder": {
					"type": "boolean"
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"orderId",
				"receiptId",
				"takerAmount",
				"makerAddress",
				"isFeeOrder"
			],
			"type": "object"
		},
		"FillReceipt": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"txHash": {
					"type": "string"
				},
				"taker": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"success",
						"error",
						"pending"
					],
					"description": "Receipt status: success | error | pending"
				},
				"side": {
					"type": "string",
					"enum": [
						"buy",
						"sell"
					]
				},
				"takerAmount": {
					"type": "string"
				},
				"makerAmount": {
					"type": "string"
				},
				"price": {
					"type": "string"
				},
				"baseAssetAddress": {
					"type": "string"
				},
				"baseSymbol": {
					"type": "string"
				},
				"quoteSymbol": {
					"type": "string"
				},
				"quoteAssetAddress": {
					"type": "string"
				},
				"feeAmount": {
					"type": "string"
				},
				"feeAssetAddress": {
					"type": "string"
				},
				"logs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FillReceiptLog"
					},
					"x-nullable": true
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"txHash",
				"taker",
				"status",
				"side",
				"takerAmount",
				"makerAmount",
				"price",
				"baseAssetAddress",
				"baseSymbol",
				"quoteSymbol",
				"quoteAssetAddress",
				"feeAmount",
				"feeAssetAddress"
			],
			"type": "object"
		},
		"IFillRequest": {
			"properties": {
				"quoteId": {
					"type": "number",
					"format": "double",
					"description": "ID of a provided quote"
				},
				"signature": {
					"type": "string",
					"description": "Signed transaction hash"
				}
			},
			"required": [
				"quoteId",
				"signature"
			],
			"type": "object"
		},
		"IExtendedOrderFill": {
			"properties": {
				"orderHash": {
					"type": "string",
					"description": "Computed hash verifying the authenticity of the order"
				},
				"takerAmount": {
					"type": "string",
					"description": "Taker amount in base units to fill from this order"
				},
				"order": {
					"$ref": "#/definitions/Order"
				}
			},
			"required": [
				"orderHash",
				"takerAmount",
				"order"
			],
			"type": "object"
		},
		"IFeeData": {
			"properties": {
				"orderId": {
					"type": "number",
					"format": "double",
					"description": "ID of order used to pay the fee"
				},
				"tokenSymbol": {
					"type": "string",
					"description": "Symbol of the token used to pay fees"
				},
				"amount": {
					"type": "string",
					"description": "Base amount of fees paid"
				},
				"networkAmount": {
					"type": "string",
					"description": "Base amount of fees paid to cover network fees"
				}
			},
			"required": [
				"orderId",
				"tokenSymbol",
				"amount",
				"networkAmount"
			],
			"type": "object"
		},
		"IFillQuote": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique quote identifier"
				},
				"fills": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IExtendedOrderFill"
					},
					"description": "Collection of fills"
				},
				"salt": {
					"type": "string",
					"description": "Unique salt"
				},
				"hex": {
					"type": "string",
					"description": "Pre-calculated hex to sign"
				},
				"taker": {
					"type": "string",
					"description": "Order taker"
				},
				"feeData": {
					"$ref": "#/definitions/IFeeData",
					"description": "Contains information regarding any applicable fees",
					"x-nullable": true
				},
				"tokenPair": {
					"$ref": "#/definitions/ITokenPair",
					"description": "Trade token pair"
				},
				"price": {
					"type": "string",
					"description": "Computed average price"
				},
				"takerAmount": {
					"type": "string",
					"description": "Total taker amount"
				},
				"makerAmount": {
					"type": "string",
					"description": "Total maker amount"
				},
				"takerAssetAddress": {
					"type": "string",
					"description": "Address of taker token"
				}
			},
			"required": [
				"id",
				"fills",
				"salt",
				"hex",
				"taker",
				"tokenPair",
				"price",
				"takerAmount",
				"makerAmount",
				"takerAssetAddress"
			],
			"type": "object"
		},
		"IOrderFill": {
			"properties": {
				"orderHash": {
					"type": "string",
					"description": "Computed hash verifying the authenticity of the order"
				},
				"takerAmount": {
					"type": "string",
					"description": "Taker amount in base units to fill from this order"
				}
			},
			"required": [
				"orderHash",
				"takerAmount"
			],
			"type": "object"
		},
		"IRequestFillRequest": {
			"properties": {
				"taker": {
					"type": "string",
					"description": "Account requesting the trade"
				},
				"fills": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IOrderFill"
					},
					"description": "Collection of trade requests"
				}
			},
			"required": [
				"taker",
				"fills"
			],
			"type": "object"
		},
		"IMarketOrderQuote": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique quote identifier"
				},
				"fills": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IExtendedOrderFill"
					},
					"description": "Collection of fills"
				},
				"salt": {
					"type": "string",
					"description": "Unique salt"
				},
				"hex": {
					"type": "string",
					"description": "Pre-calculated hex to sign"
				},
				"taker": {
					"type": "string",
					"description": "Order taker"
				},
				"feeData": {
					"$ref": "#/definitions/IFeeData",
					"description": "Contains information regarding any applicable fees",
					"x-nullable": true
				},
				"tokenPair": {
					"$ref": "#/definitions/ITokenPair",
					"description": "Trade token pair"
				},
				"price": {
					"type": "string",
					"description": "Computed average price"
				},
				"takerAmount": {
					"type": "string",
					"description": "Total taker amount"
				},
				"makerAmount": {
					"type": "string",
					"description": "Total maker amount"
				},
				"takerAssetAddress": {
					"type": "string",
					"description": "Address of taker token"
				},
				"isPartial": {
					"type": "boolean",
					"description": "Can only provide a partial quote"
				}
			},
			"required": [
				"id",
				"fills",
				"salt",
				"hex",
				"taker",
				"tokenPair",
				"price",
				"takerAmount",
				"makerAmount",
				"takerAssetAddress",
				"isPartial"
			],
			"type": "object"
		},
		"IGetMarketOrderQuoteRequest": {
			"properties": {
				"takerAddress": {
					"type": "string",
					"description": "Wallet address of intended taker"
				},
				"pair": {
					"type": "string",
					"description": "Token pair in BASE/QUOTE format"
				},
				"side": {
					"type": "string",
					"enum": [
						"buy",
						"sell"
					],
					"description": "Trade side: buy or sell"
				},
				"quantity": {
					"type": "string",
					"description": "Quantity in wei of base token to buy/sell"
				}
			},
			"required": [
				"takerAddress",
				"pair",
				"side",
				"quantity"
			],
			"type": "object"
		},
		"IGetMarketOrderQuoteByPercentageRequest": {
			"properties": {
				"takerAddress": {
					"type": "string",
					"description": "Wallet address of intended taker"
				},
				"pair": {
					"type": "string",
					"description": "Token pair in BASE/QUOTE format"
				},
				"side": {
					"type": "string",
					"enum": [
						"buy",
						"sell"
					],
					"description": "Trade side: 'buy' or 'sell'"
				},
				"percentage": {
					"type": "number",
					"format": "double",
					"description": "Percentage (integer, 1-100)"
				}
			},
			"required": [
				"takerAddress",
				"pair",
				"side",
				"percentage"
			],
			"type": "object"
		},
		"IGetReceiptsResponse": {
			"properties": {
				"total": {
					"type": "number",
					"format": "double"
				},
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FillReceipt"
					}
				}
			},
			"required": [
				"total",
				"page",
				"perPage",
				"records"
			],
			"type": "object"
		},
		"ITradingViewLog": {
			"properties": {
				"time": {
					"type": "number",
					"format": "double"
				},
				"open": {
					"type": "number",
					"format": "double"
				},
				"high": {
					"type": "number",
					"format": "double"
				},
				"low": {
					"type": "number",
					"format": "double"
				},
				"close": {
					"type": "number",
					"format": "double"
				},
				"volume": {
					"type": "number",
					"format": "double",
					"x-nullable": true
				}
			},
			"required": [
				"time",
				"open",
				"high",
				"low",
				"close"
			],
			"type": "object"
		},
		"TradeHistoryLog": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": "Unique Identifier"
				},
				"dateCreated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of creation"
				},
				"dateUpdated": {
					"type": "string",
					"format": "date-time",
					"description": "Date of updated"
				},
				"orderHash": {
					"type": "string",
					"description": "Unique, generated hash representing 0x order"
				},
				"txHash": {
					"type": "string",
					"description": "Transaction Hash"
				},
				"makerAddress": {
					"type": "string",
					"description": "Address of order maker"
				},
				"takerAddress": {
					"type": "string",
					"description": "Address of order taker"
				},
				"feeRecipientAddress": {
					"type": "string",
					"description": "Address of order feeRecipient"
				},
				"makerAssetAddress": {
					"type": "string",
					"description": "Address of maker token"
				},
				"makerTokenSymbol": {
					"type": "string",
					"description": "Symbol of maker token"
				},
				"makerTokenName": {
					"type": "string",
					"description": "Name of maker token"
				},
				"makerTokenDecimals": {
					"type": "number",
					"format": "double",
					"description": "Decimals of maker token"
				},
				"makerTokenUsdPrice": {
					"type": "string",
					"description": "Unit price of maker token in USD"
				},
				"takerAssetAddress": {
					"type": "string",
					"description": "Address of taker token"
				},
				"takerTokenSymbol": {
					"type": "string",
					"description": "Symbol of taker token"
				},
				"takerTokenName": {
					"type": "string",
					"description": "Name of taker token"
				},
				"takerTokenDecimals": {
					"type": "number",
					"format": "double"
				},
				"takerTokenUsdPrice": {
					"type": "string",
					"description": "Unit price of taker token in USD"
				},
				"filledMakerTokenAmount": {
					"type": "string",
					"description": "Base amount of maker token filled in trade"
				},
				"filledMakerTokenUnitAmount": {
					"type": "string",
					"description": "Unit amount of maker token filled in trade (adjusted for token decimals)"
				},
				"filledMakerTokenAmountUsd": {
					"type": "string",
					"description": "USD value of maker amount"
				},
				"filledTakerTokenAmount": {
					"type": "string",
					"description": "Base amount of taker token filled in trade"
				},
				"filledTakerTokenUnitAmount": {
					"type": "string",
					"description": "Unit amount of taker token filled in trade (adjusted for token decimals)"
				},
				"filledTakerTokenAmountUsd": {
					"type": "string",
					"description": "USD value of taker amount"
				},
				"paidMakerFeeAmount": {
					"type": "string",
					"description": "Base amount of ZRX fees collected from maker"
				},
				"paidMakerFeeUnitAmount": {
					"type": "string",
					"description": "Unit amount of ZRX fees collected from maker"
				},
				"paidMakerFeeUsd": {
					"type": "string",
					"description": "USD value of maker fee"
				},
				"paidTakerFeeAmount": {
					"type": "string",
					"description": "Base amount of ZRX fees collected from taker"
				},
				"paidTakerFeeUnitAmount": {
					"type": "string",
					"description": "Unit amount of ZRX fees collected from taker"
				},
				"paidTakerFeeUsd": {
					"type": "string",
					"description": "USD value of taker fee"
				},
				"relayer": {
					"type": "string",
					"description": "Name of originating relayer (if known)"
				}
			},
			"required": [
				"id",
				"dateCreated",
				"dateUpdated",
				"orderHash",
				"txHash",
				"makerAddress",
				"takerAddress",
				"feeRecipientAddress",
				"makerAssetAddress",
				"makerTokenSymbol",
				"makerTokenName",
				"makerTokenDecimals",
				"makerTokenUsdPrice",
				"takerAssetAddress",
				"takerTokenSymbol",
				"takerTokenName",
				"takerTokenDecimals",
				"takerTokenUsdPrice",
				"filledMakerTokenAmount",
				"filledMakerTokenUnitAmount",
				"filledMakerTokenAmountUsd",
				"filledTakerTokenAmount",
				"filledTakerTokenUnitAmount",
				"filledTakerTokenAmountUsd",
				"paidMakerFeeAmount",
				"paidMakerFeeUnitAmount",
				"paidMakerFeeUsd",
				"paidTakerFeeAmount",
				"paidTakerFeeUnitAmount",
				"paidTakerFeeUsd",
				"relayer"
			],
			"type": "object"
		},
		"IGetTradeHistoryLogsResponse": {
			"properties": {
				"page": {
					"type": "number",
					"format": "double"
				},
				"perPage": {
					"type": "number",
					"format": "double"
				},
				"pages": {
					"type": "number",
					"format": "double"
				},
				"total": {
					"type": "number",
					"format": "double"
				},
				"records": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TradeHistoryLog"
					}
				}
			},
			"required": [
				"page",
				"perPage",
				"pages",
				"total",
				"records"
			],
			"type": "object"
		}
	},
	"info": {
		"title": "ERC dEX REST API",
		"version": "0.0.1-alpha"
	},
	"paths": {
		"/aggregated_orders": {
			"get": {
				"operationId": "GetAggregatedOrders",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IAggregatedOrderData"
						}
					}
				},
				"tags": [
					"AggregatedOrders"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "baseSymbol",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "quoteSymbol",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/asset_pairs": {
			"get": {
				"operationId": "GetAssetPairs",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IGetAssetPairsResponse"
						}
					}
				},
				"description": "Get a list of supported asset pairs",
				"tags": [
					"AssetPairs"
				],
				"security": [],
				"parameters": [
					{
						"default": 1,
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 100,
						"in": "query",
						"name": "perPage",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/networks": {
			"get": {
				"operationId": "GetSupportedNetwork",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/INetwork"
						}
					}
				},
				"description": "Get supported network info",
				"tags": [
					"Networks"
				],
				"security": [],
				"parameters": []
			}
		},
		"/networks/maintenance": {
			"get": {
				"operationId": "IsMaintenance",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IMaintenanceStatus"
						}
					}
				},
				"description": "Determine if app is in maintenance mode",
				"tags": [
					"Networks"
				],
				"security": [],
				"parameters": []
			}
		},
		"/news/cryptopanic/{symbol}": {
			"get": {
				"operationId": "GetCryptoPanicNews",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ICryptoPanicPostsResponse"
						}
					}
				},
				"tags": [
					"News"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "symbol",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/news/ercdex": {
			"get": {
				"operationId": "GetErcDexNews",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IGetNewsItemsResponse"
						}
					}
				},
				"tags": [
					"News"
				],
				"security": [],
				"parameters": [
					{
						"default": 1,
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 20,
						"in": "query",
						"name": "perPage",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/notifications": {
			"get": {
				"operationId": "GetNotifications",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Notification"
							}
						}
					}
				},
				"description": "Get active notifications for an account",
				"tags": [
					"Notifications"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "account",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/orders": {
			"post": {
				"operationId": "CreateOrder",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Order"
						}
					}
				},
				"description": "Submit a signed order",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IOrderCreationRequest"
						}
					}
				]
			},
			"get": {
				"operationId": "GetOrders",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IGetOrdersResponse"
						}
					}
				},
				"description": "Get a list of orders",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"default": true,
						"description": "Include orders that are open; if false, only closed orders are returned",
						"in": "query",
						"name": "open",
						"required": false,
						"type": "boolean"
					},
					{
						"default": 1,
						"description": "Page number",
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 100,
						"description": "Page size",
						"in": "query",
						"name": "perPage",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"description": "0x contract exchange address",
						"in": "query",
						"name": "exchangeAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Fee recipient address",
						"in": "query",
						"name": "feeRecipientAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Encoded taker asset data",
						"in": "query",
						"name": "takerAssetData",
						"required": false,
						"type": "string"
					},
					{
						"description": "Encoded maker asset data",
						"in": "query",
						"name": "makerAssetData",
						"required": false,
						"type": "string"
					},
					{
						"description": "Designated address to execute orders",
						"in": "query",
						"name": "senderAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Encoded asset data (could be maker or taker)",
						"in": "query",
						"name": "traderAssetData",
						"required": false,
						"type": "string"
					},
					{
						"description": "Trader address (could be makerAddress or takerAddress)",
						"in": "query",
						"name": "traderAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Token address of taker asset",
						"in": "query",
						"name": "takerAssetAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of order taker",
						"in": "query",
						"name": "takerAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Token address of maker asset",
						"in": "query",
						"name": "makerAssetAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of order maker",
						"in": "query",
						"name": "makerAddress",
						"required": false,
						"type": "string"
					},
					{
						"description": "Maker asset proxy ID (ERC20 proxy only",
						"in": "query",
						"name": "makerAssetProxyId",
						"required": false,
						"type": "string"
					},
					{
						"description": "Taker asset proxy ID (ERC20 proxy only)",
						"in": "query",
						"name": "takerAssetProxyId",
						"required": false,
						"type": "string"
					},
					{
						"in": "query",
						"name": "pair",
						"required": false,
						"type": "string"
					}
				]
			}
		},
		"/order/{orderHash}": {
			"get": {
				"operationId": "GetOrderByHash",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IOrderData"
						}
					}
				},
				"description": "Get a single order by hash",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"description": "Hex format hash of order parameters",
						"in": "path",
						"name": "orderHash",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/order_config": {
			"get": {
				"operationId": "GetOrderConfig",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IOrderConfig"
						}
					}
				},
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "makerAddress",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "takerAddress",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "makerAssetAmount",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "takerAssetAmount",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "makerAssetData",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "takerAssetData",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "exchangeAddress",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/fee_recipients": {
			"get": {
				"operationId": "GetFeeRecipients",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IFeeRecipientsResponse"
						}
					}
				},
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": []
			}
		},
		"/orderbook": {
			"get": {
				"operationId": "GetOrderbook",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IOrderbookResponse"
						}
					}
				},
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "baseAssetData",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "quoteAssetData",
						"required": true,
						"type": "string"
					},
					{
						"default": 100,
						"in": "query",
						"name": "perPage",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 1,
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/orders/cancel": {
			"post": {
				"operationId": "CancelOrders",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ICancelOrderResult"
							}
						}
					}
				},
				"description": "Cancel one or more orders",
				"tags": [
					"Orders"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ICancelOrdersRequest"
						}
					}
				]
			}
		},
		"/reports/ticker": {
			"get": {
				"operationId": "GetTickerData",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ITokenTicker"
							}
						}
					}
				},
				"tags": [
					"Reports"
				],
				"security": [],
				"parameters": []
			}
		},
		"/ticker": {
			"get": {
				"operationId": "GetTicker",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IGlobalTickerRecord"
							}
						}
					}
				},
				"tags": [
					"Ticker"
				],
				"security": [],
				"parameters": [
					{
						"default": "24h",
						"description": "Granularity of results: 24h (1 day), 1w (1 week), 1mo (1 month)",
						"in": "query",
						"name": "granularity",
						"required": false,
						"type": "string"
					}
				]
			}
		},
		"/token_requests": {
			"post": {
				"operationId": "CreateTokenRequest",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"TokenRequest"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ITokenRequestRequest"
						}
					}
				]
			}
		},
		"/trade/fill": {
			"post": {
				"operationId": "Fill",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/FillReceipt"
						}
					}
				},
				"description": "Redeem a signed quote (see RequestFill to receive a quote)",
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IFillRequest"
						}
					}
				]
			}
		},
		"/trade/request_fill": {
			"post": {
				"operationId": "RequestFill",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IFillQuote"
						}
					}
				},
				"description": "Request to fill an order; returns a quote payload that can be signed and redeemed to begin execution",
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IRequestFillRequest"
						}
					}
				]
			}
		},
		"/trade/market_quote": {
			"post": {
				"operationId": "GetMarketQuote",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IMarketOrderQuote"
						}
					}
				},
				"description": "Get a quote for a requested quantity",
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IGetMarketOrderQuoteRequest"
						}
					}
				]
			}
		},
		"/trade/market_quote_by_percent": {
			"post": {
				"operationId": "GetMarketQuoteByPercent",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IMarketOrderQuote"
						}
					}
				},
				"description": "Get a quote by percentage",
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IGetMarketOrderQuoteByPercentageRequest"
						}
					}
				]
			}
		},
		"/trade/receipt/{id}": {
			"get": {
				"operationId": "GetReceipt",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/FillReceipt"
						}
					}
				},
				"description": "Get a receipt of an attempted fill",
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"format": "double",
						"type": "number"
					}
				]
			}
		},
		"/trade/receipts": {
			"get": {
				"operationId": "GetReceipts",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IGetReceiptsResponse"
						}
					}
				},
				"tags": [
					"Trade"
				],
				"security": [],
				"parameters": [
					{
						"default": 1,
						"description": "Page",
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 100,
						"description": "Page size",
						"in": "query",
						"name": "perPage",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"description": "Optionally provide wallet address of receipt recipient",
						"in": "query",
						"name": "taker_address",
						"required": false,
						"type": "string"
					},
					{
						"description": "The token pair in the format BASE/QUOTE, e.g. ZRX/WETH",
						"in": "query",
						"name": "pair",
						"required": false,
						"type": "string"
					}
				]
			}
		},
		"/trading_view": {
			"get": {
				"operationId": "GetTradingViewLogs",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ITradingViewLog"
							}
						}
					}
				},
				"tags": [
					"TradingView"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pair",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "resolution",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "startDate",
						"required": true,
						"format": "date-time",
						"type": "string"
					},
					{
						"in": "query",
						"name": "endDate",
						"required": true,
						"format": "date-time",
						"type": "string"
					}
				]
			}
		},
		"/trade_history_logs": {
			"get": {
				"operationId": "GetTradeHistoryLogs",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IGetTradeHistoryLogsResponse"
						}
					}
				},
				"tags": [
					"TradeHistoryLogs"
				],
				"security": [],
				"parameters": [
					{
						"default": 1,
						"description": "Page number (default: 1)",
						"in": "query",
						"name": "page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": 20,
						"description": "Page size (max 1000, default: 20)",
						"in": "query",
						"name": "per_page",
						"required": false,
						"format": "double",
						"type": "number"
					},
					{
						"default": "date",
						"description": "Sort order (default: 'date'). date: Sort by trade date",
						"in": "query",
						"name": "sort_order",
						"required": false,
						"type": "string"
					},
					{
						"default": "desc",
						"description": "Sort direction (default: 'desc'). Options: asc: Ascending, desc: Descending",
						"in": "query",
						"name": "sort_direction",
						"required": false,
						"type": "string"
					},
					{
						"description": "Name of originating 0x relayer",
						"in": "query",
						"name": "relayer",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of order maker",
						"in": "query",
						"name": "maker",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of order feeRecipient",
						"in": "query",
						"name": "fee_recipient",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of maker token",
						"in": "query",
						"name": "maker_token_address",
						"required": false,
						"type": "string"
					},
					{
						"description": "Symbol of maker token",
						"in": "query",
						"name": "maker_token_symbol",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of order taker",
						"in": "query",
						"name": "taker",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of taker token",
						"in": "query",
						"name": "taker_token_address",
						"required": false,
						"type": "string"
					},
					{
						"description": "Symbol of taker token",
						"in": "query",
						"name": "taker_token_symbol",
						"required": false,
						"type": "string"
					},
					{
						"description": "Unique, generated hash representing 0x order",
						"in": "query",
						"name": "order_hash",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of token that is either maker or taker",
						"in": "query",
						"name": "token_address",
						"required": false,
						"type": "string"
					},
					{
						"description": "Symbol of token that is either maker or taker",
						"in": "query",
						"name": "token_symbol",
						"required": false,
						"type": "string"
					},
					{
						"description": "Transaction hash",
						"in": "query",
						"name": "tx_hash",
						"required": false,
						"type": "string"
					},
					{
						"description": "Address of either maker or taker",
						"in": "query",
						"name": "trader",
						"required": false,
						"type": "string"
					},
					{
						"description": "Minimum trade date: format (UTC): 2017-01-01T00:00:00.000Z",
						"in": "query",
						"name": "min_date",
						"required": false,
						"format": "date-time",
						"type": "string"
					},
					{
						"description": "Maximum trade date. Format (UTC): 2017-01-01T00:00:00.000Z",
						"in": "query",
						"name": "max_date",
						"required": false,
						"format": "date-time",
						"type": "string"
					},
					{
						"default": "json",
						"description": "Result format (default: 'json'). Options: 'json', 'csv'. CSV: Page size limited to 10000 records",
						"in": "query",
						"name": "format",
						"required": false,
						"type": "string"
					},
					{
						"description": "Token pair. Format: base_token_symbol/quote_token_symbol. Example: ZRX/WETH",
						"in": "query",
						"name": "pair",
						"required": false,
						"type": "string"
					}
				]
			}
		}
	},
	"produces": [
		"application/json"
	],
	"swagger": "2.0",
	"securityDefinitions": {},
	"host": "app.ercdex.com",
	"schemes": [
		"https"
	]
}